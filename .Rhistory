aa<-makeVector(c(1,2,3,4))
aa
aa$set
aa$get()
aa$getmean()
aa
aa$setmean()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(aa)
cachemean(aa)
makeVector
cachemean
?solve
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(1:4))
aa <- makeCacheMatrix(matrix(1:4))
aa
aa$get()
aa <- makeCacheMatrix(matrix(1:4),nrow=2, ncol=2)
aa <- makeCacheMatrix(matrix(1:4,nrow=2, ncol=2))
aa$get()
aa$get()
aa$set()
aa$set(matrix(5:8,nrow=2, ncol=2))
aa$get()
x
inv
cacheSolve(aa)
aa$set(numeric(matrix(5:8,nrow=2, ncol=2)))
?numeric
aa$set(as.numeric(matrix(5:8,nrow=2, ncol=2)))
cacheSolve(aa)
a
aa$set(as.numeric(matrix(5:8,nrow=2, ncol=2)))
bb <- as.numeric(matrix(5:8,nrow=2, ncol=2))
bb
bb <- (matrix(5:8,nrow=2, ncol=2))
bb
bb <- (matrix(as.numeric(5:8),nrow=2, ncol=2))
bb
aa$set((matrix(as.numeric(5:8),nrow=2, ncol=2)))
cacheSolve(aa)
bb
bb
bb
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
bb
cacheSolve(aa)
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(aa)
cacheSolve(aa)
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(aa)
x
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
aa
aa
aa
source('~/Git_my_repos/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
history
history()
aa$set((matrix(as.numeric(5:8),nrow=2, ncol=2)))
cacheSolve(aa)
cacheSolve(aa)
azz <- strptime(c("2h27mn"), format = "%Ih%Mmn")
azz
azz <- strptime(c("2h27mn"), format = "%Hh%Mmn")
azz
azz.time
azz <- strftime(c("2h27mn"), format = "%Hh%Mmn")
azz <- strptime(c("2h27mn"), format = "%Hh%Mmn")
azz
?str
install.packages("knitr")
install.packages("markdown")
?pairs
install.packages("xtable")
?pbeta
qunif
?qunif
qunif(0.75)
qunif(1)
qunif(0/4)
qunif(0.4)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
temp
temp.X
temp$X
temp[1]
temp[2]
temp[3]
temp[6]
temp[1,1]
temp[1,2]
temp[1,3]
temp[1,4]
temp[1,5]
str(temp)
summary(temp)
temp[1,]
temp[2,]
temp[2,]*temp[1,]
sum(temp[2,]*temp[1,])
setwd("~/GitHub/RepData_PeerAssessment1")
act_raw <= read.csv("activity/activity.csv")
act_raw <= read.csv("activity/activity.csv")
act_raw <- read.csv("activity/activity.csv")
getwd()
dir()
?unzip
unzip("activity.zip")
act_raw <- read.csv("activity.csv")
str(act_raw)
View(act_raw)
View(act_raw)
names(act_raw)
act_raw$date <- as.date(act_raw@date)
?date
as.POSIXlt(act_raw@date, format = "%Y-%m-%d %H:%M")
as.POSIXlt(act_raw@date, format = "%Y-%m-%d")
data <- as.POSIXlt(act_raw@date, format = "%Y-%m-%d")
?as.POSIXlt
class(act_raw)
class(act_raw$date)
data <- as.POSIXlt(strptime(act_raw@date, format = "%Y-%m-%d"))
strptime(act_raw@date, format = "%Y-%m-%d")
strptime(as.character(act_raw@date), format = "%Y-%m-%d")
act_raw$date <- as.Date(act_raw@date)
act_raw$date <- as.character(act_raw@date)
act_raw$date <- as.Date(act_raw$date)
class(act_raw$date)
?as.Date
setwd("~/GitHub/RepData_PeerAssessment1")
### Loading raw data (already in the repository, compressed)
unzip("activity.zip", overwrite = TRUE)
act_raw <- read.csv("activity.csv")
act_raw$date <- as.Date(act_raw$date, "%Y-%m-%d")
View(act_raw)
View(act_raw)
str(act_raw)
?hist
act_date <- group_by(act_raw, date)
library(dplyr)
act_date <- group_by(act_raw, date)
act_date <- mutate(act_date, passi=sum(steps))
View(act_date)
View(act_date)
summarize(act_date, passi=sum(steps))
summarize(act_date, passi=sum(steps), na.rm = TRUE)
summarize(act_date, passi=sum(steps, na.rm = TRUE))
act_date <- group_by(act_raw, date)
summarize(act_date, passi=sum(steps, na.rm = TRUE))
hist(summarize(act_date, passi=sum(steps, na.rm = TRUE)))
act_sum <- summarize(act_date, passi=sum(steps, na.rm = TRUE))
hist(act_sum)
View(act_sum)
View(act_sum)
act_sum <- summarize(act_date, passi=sum(steps, na.rm = TRUE))
hist(act_sum$passi)
hist(act_sum$passi, xlab="Steps per day")
mean(act_sum$passi)
?mean
median(act_sum$passi)
2355/5
2355*5
2355*5/60
2355/5
2355/(5*60)
2355/60
act_int <- group_by(act_raw, interval)
act_sum <- summarize(act_int, passi=sum(steps, na.rm = TRUE))
View(act_sum)
View(act_sum)
plot(act_int)
?plot
plot.default
plot.default()
plot(act_sum$passi, plot.type=1, xlab="Time interval", main="Steps per day")
plot(act_sum$passi, plot.type=1, xlab="Time (minutes)", ylab("Total steps") main="Steps throughout the day"))
plot(act_sum$passi, plot.type=1, xlab="Time (minutes)", ylab("Total steps") main="Steps throughout the day")
plot(act_sum$passi, plot.type=1, xlab="Time (minutes)", ylab("Total steps") main="Steps throughout the day")
max(act_sum)
?max
?which.max
which.max(act_sum$passi)
act_sum$interval[which.max(act_sum$passi)]
plot(act_sum, xlab="Time (minutes)", ylab="Total steps", main="Steps throughout the day")
count(is.NA(act_raw))
count(is.na(act_raw))
count(is.na(act_raw$steps))
count(is.na(act_raw$steps))
(is.na(act_raw$steps))
?count
sum(is.na(act_raw$steps))
sum(not(is.na(act_raw$steps))
)
sum(!(is.na(act_raw$steps)))
sum(not(is.na(act_raw$steps)))
sum(is.na(act_raw$steps))
?group_by
?mutate
mutate(act_sum, mean_int=mean(steps, na.rm=TRUE))
mutate(act_sum, mean_int=mean(act_sum$steps, na.rm=TRUE))
mutate(act_int, mean_int=mean(act_int$steps, na.rm=TRUE))
mutate(act_int, mean_int=mean(act_int$steps, na.rm=TRUE))
head(act_int)
act_mean <- summarize(act_int, media=mean(steps, na.rm=TRUE))
View(act_mean)
View(act_mean)
mutate(act_sum, mean_int=summarize(act_int, media=mean(steps, na.rm=TRUE)))
View(act_mean)
View(act_mean)
mutate(act_sum, mean_int=act_mean$media)
?replace
mutate(act_sum, mean_int=act_mean$media)
View(act_mean)
View(act_mean)
na_list <- is.na(is.na(act_raw$steps))
interval_list <- act_rav$interval[na_list]
interval_list <- act_raw$interval[na_list]
interval_list <- act_raw[na_list]$interval
interval_list <- act_raw[na_list]
na_list <- filter(act_raw, is.na(act_raw$steps))
View(na_list)
View(na_list)
View(na_list)
View(na_list)
View(na_list)
View(na_list)
act_mean(act_mean@interval=50)
View(act_mean)
View(act_mean)
act_mean(act_mean@interval==50)
act_mean[act_mean@interval=50]
act_mean[act_mean@interval==50]
filter[act_mean, interval=50]
act_mean$media[act_mean@interval=5]
act_mean$media[act_mean@interval==5]
filter[act_mean, interval=5]
filter[act_raw, interval=5]
filter(act_raw, interval=5)
filter(act_mean, interval=5)
filter(act_mean, act_mean@interval=5)
filter(act_mean, (act_mean@interval=5)
)
filter(act_mean, (act_mean@interval=5))
?lookup
act_raw$interval <- as.Date(act_raw$interval, "%HH%MM")
?as.Date
act_raw$interval <- as.Date(act_raw$interval, "%H%M")
act_raw$interval <- as.Date(as.character(act_raw$interval), "%H%M")
View(act_raw)
View(act_raw)
act_raw <- read.csv("activity.csv")
View(act_raw)
View(act_raw)
act_raw$interval <- as.Date(as.character(act_raw$interval), "%H%M")
View(act_raw)
View(act_raw)
act_raw <- read.csv("activity.csv")
act_raw$interva <- strptime(as.character(act_raw$interval), "%H%M")
View(act_raw)
View(act_raw)
act_raw$interva <- strptime(as.character(act_raw$interval), "%HH%MM")
View(act_raw)
View(act_raw)
?strptime
act_raw$interva <- strptime(as.character(act_raw$interval), "%H%M")
View(act_raw)
?str_pad
str_pad
install.packages("stringr")
install.packages("stringr")
?str
azz <- str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0")
library(stringr)
azz <- str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0")
act_raw$interva <- strptime(str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0"), "%H%M")
View(act_raw)
View(act_raw)
act_raw <- read.csv("activity.csv")
### Converting dates and intervals
act_raw$date <- as.Date(act_raw$date, "%Y-%m-%d")
#act_raw$interval <- as.Date(act_raw$interval, "%HH%MM")
str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0")
act_raw$interval <- strptime(str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0"), "%H%M")
act_date <- group_by(act_raw, date)
act_sum <- summarize(act_date, passi=sum(steps, na.rm = TRUE))
hist(act_sum$passi, xlab="Steps", main="Steps per day")
mean(act_sum$passi)
median(act_sum$passi)
act_int <- group_by(act_raw, interval)
act_sum <- summarize(act_int, passi=sum(steps, na.rm = TRUE))
plot(act_sum, xlab="Time", ylab="Total steps", main="Steps throughout the day")
max_steps_time <- act_sum$interval[which.max(act_sum$passi)]
max_steps_time
library(dplyr)
library(stringr)
act_date <- group_by(act_raw, date)
act_sum <- summarize(act_date, passi=sum(steps, na.rm = TRUE))
hist(act_sum$passi, xlab="Steps", main="Steps per day")
mean(act_sum$passi)
median(act_sum$passi)
act_int <- group_by(act_raw, interval)
act_sum <- summarize(act_int, passi=sum(steps, na.rm = TRUE))
plot(act_sum, xlab="Time", ylab="Total steps", main="Steps throughout the day")
max_steps_time <- act_sum$interval[which.max(act_sum$passi)]
max_steps_time
?plot
View(act_sum)
View(act_sum)
View(act_raw)
View(act_raw)
View(act_mean)
View(act_int)
act_raw <- read.csv("activity.csv")
### Converting dates and intervals
act_raw$date <- as.Date(act_raw$date, "%Y-%m-%d")
#act_raw$interval <- as.Date(act_raw$interval, "%HH%MM")
act_raw$interval <- strptime(str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0"), "%H%M")
act_date <- group_by(act_raw, date)
act_sum <- summarize(act_date, passi=sum(steps, na.rm = TRUE))
hist(act_sum$passi, xlab="Steps", main="Steps per day")
mean(act_sum$passi)
median(act_sum$passi)
act_int <- group_by(act_raw, interval)
act_sum <- summarize(act_int, passi=sum(steps, na.rm = TRUE))
plot(act_sum, xlab="Time", ylab="Total steps", main="Steps throughout the day")
max_steps_time <- act_sum$interval[which.max(act_sum$passi)]
max_steps_time
View(act_date)
View(act_date)
View(act_raw)
str(act_raw)
str(act_date)
View(act_date)
View(act_int)
View(act_int)
act_sum$interval <- strptime(str_pad(as.character(act_sum$interval), width=4, side = "left", pad = "0"), "%H%M")
plot(act_sum, xlab="Time", ylab="Total steps", main="Steps throughout the day")
max_steps_time <- act_sum$interval[which.max(act_sum$passi)]
max_steps_time
?print
print(max_steps_time)
print(max_steps_time, "%HH:%MM")
print(max_steps_time, "%H:%M")
class(max_step_time)
class(max_steps_time)
?as.Date
as.Date(max_step_time, %H:%M)
as.Date(max_step_time, "%H:%M")
as.Date(max_steps_time, "%H:%M")
as.Date(max_steps_time)
strptime(max_steps_time)
strptime(max_steps_time, "%H:%M")
?strptime
max_steps_time$sec
max_steps_time$min
max_steps_time$hour
print(max_steps_time$hour,":",max_steps_time$min)
?print
format(max_steps_time, "%H:%M")
number_of_NA <- sum(is.na(act_raw$steps))
number_of_NA
# Compute the mean of each non-NA time interval to replace the NAs
act_mean <- summarize(act_int, media=mean(steps, na.rm=TRUE))
# Replace the NAs in the raw dataset
na_list <- filter(act_raw, is.na(act_raw$steps))
interval_list <- act_raw[na_list]
View(act_mean)
View(act_mean)
str(act_raw)
na_list <- filter(act_raw, is.na(act_raw$steps))
as.numeric(act_raw$interval)
act_raw$interval <- as.numeric(act_raw$interval)
na_list <- filter(act_raw, is.na(act_raw$steps))
View(na_list)
View(na_list)
View(na_list)
View(na_list)
interval_list <- act_raw[na_list]
act_mean$interval <- as.numeric(act_mean$interval)
View(act_mean)
View(act_mean)
act_mean$interval <- as.numeris(strptime(str_pad(as.character(act_mean$interval), width=4, side = "left", pad = "0"), "%H%M"))
act_mean$interval <- as.numeric(strptime(str_pad(as.character(act_mean$interval), width=4, side = "left", pad = "0"), "%H%M"))
View(act_mean)
View(act_mean)
View(na_list)
View(na_list)
?findInterval
View(na_list)
View(na_list)
View(act_mean)
length(na_list)
size(na_list)
?length
size(na_list[1,])
length(na_list[1,])
length(na_list[,1])
?which
?merge
azz <- merge(na_list, act_mean)
View(azz)
View(azz)
?mutate
transmute(azz, interval=media)
View(azz)
View(azz)
azz <- transmute(azz, interval=media)
View(azz)
View(azz)
azz <- merge(na_list, act_mean)
azz <- mutate(azz, interval=media)
View(azz)
View(azz)
azz <- merge(na_list, act_mean)
azz <- mutate(azz, steps=media)
View(azz)
azz_final <- merge(azz,act_raw, all.y=TRUE)
View(azz_final)
View(azz_final)
View(azz)
View(act_raw)
azz_final <- merge(azz,act_raw)
azz_final <- merge(azz,act_raw, all.y=TRUE)
azz_final <- merge(azz,act_raw, all.x=TRUE)
azz_final <- merge(azz,act_raw, all=TRUE)
View(azz_final)
View(azz_final)
?na.omit
na.omit(azz_final)
act_na_mean <- na.omit(azz_final)
azz_final <- subset(azz_final, select = -c(media) )
View(azz_final)
View(azz_final)
act_na_mean <- na.omit(azz_final)
View(act_na_mean)
View(act_na_mean)
azz_final <- merge(azz,act_raw, all=TRUE)
View(azz_final)
View(azz_final)
View(act_na_mean)
View(act_na_mean)
act_na_mean_date <- group_by(act_na_mean, date)
act_sum_na_mean <- summarize(act_na_mean_date, passi=sum(steps, na.rm = TRUE))
hist(act_sum_na_mean$passi, xlab="Steps", main="Steps per day")
mean(act_sum_na_mean$passi)
median(act_sum_na_mean$passi)
act_raw <- read.csv("activity.csv")
### Converting dates and intervals
act_raw$date <- as.Date(act_raw$date, "%Y-%m-%d")
#act_raw$interval <- as.Date(act_raw$interval, "%HH%MM")
act_raw$interval <- strptime(str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0"), "%H%M")
act_date <- group_by(act_raw, date)
act_raw$interval <- as.numeric(act_raw$interval)
act_date <- group_by(act_raw, date)
View(act_date)
View(act_date)
act_sum <- summarize(act_date, passi=sum(steps, na.rm = TRUE))
View(act_raw)
View(act_sum)
View(act_sum)
View(act_date)
View(act_date)
View(act_sum)
View(act_raw)
View(act_date)
View(act_raw)
View(act_sum)
act_int <- group_by(act_raw, interval)
act_sum <- summarize(act_int, passi=sum(steps, na.rm = TRUE))
View(act_sum)
plot(act_sum, xlab="Time", ylab="Total steps", main="Steps throughout the day")
act_sum$interval <- strptime(str_pad(as.character(act_sum$interval), width=4, side = "left", pad = "0"), "%H%M")
plot(act_sum, xlab="Time", ylab="Total steps", main="Steps throughout the day")
act_raw <- read.csv("activity.csv")
### Converting dates and intervals
act_raw$date <- as.Date(act_raw$date, "%Y-%m-%d")
#act_raw$interval <- as.Date(act_raw$interval, "%HH%MM")
act_raw$interval <- strptime(str_pad(as.character(act_raw$interval), width=4, side = "left", pad = "0"), "%H%M")
act_raw$interval <- as.numeric(act_raw$interval)
act_date <- group_by(act_raw, date)
act_sum <- summarize(act_date, passi=sum(steps, na.rm = TRUE))
hist(act_sum$passi, xlab="Steps", main="Steps per day")
mean(act_sum$passi)
median(act_sum$passi)
act_int <- group_by(act_raw, interval)
act_sum <- summarize(act_int, passi=sum(steps, na.rm = TRUE))
plot(act_sum, xlab="Time", ylab="Total steps", main="Steps throughout the day")
max_steps_time <- act_sum$interval[which.max(act_sum$passi)]
format(max_steps_time, "%H:%M")
act_sum$interval <- strptime(str_pad(as.character(act_sum$interval), width=4, side = "left", pad = "0"), "%H%M")
max_steps_time <- act_sum$interval[which.max(act_sum$passi)]
format(max_steps_time, "%H:%M")
?hist
